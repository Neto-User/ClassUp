package classup;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.util.HashMap;

public class SistemaNotasSwing extends JFrame {

    private JTextField campoNota1, campoNota2, campoNota3, campoNotaExtra, campoData;
    private JComboBox<String> comboDisciplina, comboSemestre, comboAluno;
    private JLabel labelResultado, labelMedia, labelTurmaSelecionada;
    private JTable tabelaDados;
    private DefaultTableModel modeloTabela;
    private JTabbedPane abas;

    private String turmaSelecionada = null;

    // Simulação de dados de alunos por turma (exemplo)
    private HashMap<String, String[]> alunosPorTurma = new HashMap<>();

    public SistemaNotasSwing() {
        // Exemplo de turmas e seus alunos
        alunosPorTurma.put("Turma A", new String[]{"Carlos", "Maria"});
        alunosPorTurma.put("Turma B", new String[]{"João", "Ana"});

        setTitle("ClassUp - Sistema de Notas");
        setSize(900, 750);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        abas = new JTabbedPane();
        abas.setFont(new Font("Segoe UI", Font.BOLD, 16));
        abas.add("NOTAS", criarPainelNotas());
        abas.add("Notas Salvas", criarPainelTabela());
        add(abas);
    }

    private JPanel criarPainelNotas() {
        JPanel painel = new JPanel(null);
        painel.setBackground(new Color(176, 148, 130));

        JLabel titulo = new JLabel("NOTAS", SwingConstants.CENTER);
        titulo.setFont(new Font("Georgia", Font.BOLD, 30));
        titulo.setForeground(new Color(60, 45, 35));
        titulo.setBounds(0, 10, 900, 40);
        painel.add(titulo);

        int yBase = 70;
        int espacamento = 50;

        // Botão para selecionar TURMA
        JButton btnSelecionarTurma = criarBotaoArredondado("SELECIONAR TURMA", 50, yBase, painel);
        btnSelecionarTurma.addActionListener(e -> selecionarTurma());

        // Label para exibir a turma selecionada em itálico
        labelTurmaSelecionada = new JLabel("");
        labelTurmaSelecionada.setFont(new Font("Segoe UI", Font.ITALIC, 16));
        labelTurmaSelecionada.setForeground(new Color(60, 45, 35));
        labelTurmaSelecionada.setBounds(320, yBase, 300, 30);
        painel.add(labelTurmaSelecionada);

        // Combo ALUNO (inicialmente desabilitado)
        comboAluno = criarComboBox(painel, "ALUNO:", new String[]{}, 50, yBase += espacamento);
        comboAluno.setEnabled(false);

        JLabel labelMatricula = new JLabel("MATRÍCULA: 123");
        labelMatricula.setBounds(450, yBase, 200, 25);
        labelMatricula.setFont(new Font("Segoe UI", Font.BOLD, 16));
        labelMatricula.setForeground(new Color(60, 45, 35));
        painel.add(labelMatricula);

        comboDisciplina = criarComboBox(painel, "DISCIPLINA:", new String[]{"Matemática", "Português", "História"}, 50, yBase += espacamento);
        comboSemestre = criarComboBox(painel, "SEMESTRE:", new String[]{"1º", "2º"}, 450, yBase);

        campoData = criarCampoTexto(painel, "DATA:", "11/06/2025", 50, yBase += espacamento);

        campoNota1 = criarCampoTexto(painel, "NOTA 1:", "", 50, yBase += espacamento);
        campoNota2 = criarCampoTexto(painel, "NOTA 2:", "", 50, yBase += espacamento);
        campoNota3 = criarCampoTexto(painel, "NOTA 3:", "", 50, yBase += espacamento);
        campoNotaExtra = criarCampoTexto(painel, "NOTA EXTRA:", "", 50, yBase += espacamento);

        // Navegação com Enter
        campoNota1.addActionListener(e -> campoNota2.requestFocus());
        campoNota2.addActionListener(e -> campoNota3.requestFocus());
        campoNota3.addActionListener(e -> campoNotaExtra.requestFocus());

        // Labels de média e resultado mais à direita e alinhados
        labelMedia = new JLabel("MÉDIA: ");
        labelMedia.setFont(new Font("Segoe UI", Font.BOLD, 20));
        labelMedia.setBounds(500, campoNota1.getY(), 300, 30);
        labelMedia.setForeground(new Color(60, 45, 35));
        painel.add(labelMedia);

        labelResultado = new JLabel("RESULTADO: ");
        labelResultado.setFont(new Font("Segoe UI", Font.BOLD, 20));
        labelResultado.setBounds(500, campoNota1.getY() + 40, 300, 30); // Espaçamento reduzido
        labelResultado.setForeground(new Color(60, 45, 35));
        painel.add(labelResultado);

        // Botões um pouco mais abaixo
        JButton btnCalcular = criarBotaoArredondado("CALCULAR MÉDIA", 300, campoNotaExtra.getY() + 70, painel);
        btnCalcular.addActionListener(e -> calcularResultado());

        JButton btnSalvar = criarBotaoArredondado("SALVAR", 300, btnCalcular.getY() + 70, painel);
        btnSalvar.addActionListener(e -> salvarDados());

        return painel;
    }

    private void selecionarTurma() {
        Object[] turmas = alunosPorTurma.keySet().toArray();
        String turma = (String) JOptionPane.showInputDialog(
                this, "Selecione a Turma:", "Turmas",
                JOptionPane.QUESTION_MESSAGE, null, turmas, turmas[0]
        );

        if (turma != null) {
            turmaSelecionada = turma;
            comboAluno.setModel(new DefaultComboBoxModel<>(alunosPorTurma.get(turma)));
            comboAluno.setEnabled(true);
            labelTurmaSelecionada.setText(turmaSelecionada);
        }
    }

    private JTextField criarCampoTexto(JPanel painel, String titulo, String textoInicial, int x, int y) {
        JLabel label = new JLabel(titulo);
        label.setBounds(x, y, 150, 25);
        label.setFont(new Font("Segoe UI", Font.BOLD, 16));
        label.setForeground(new Color(60, 45, 35));
        painel.add(label);

        JTextField campo = new JTextField(textoInicial);
        campo.setBounds(x + 120, y, 200, 35);
        campo.setFont(new Font("Segoe UI", Font.PLAIN, 16));
        campo.setBackground(new Color(232, 225, 217));
        campo.setBorder(BorderFactory.createLineBorder(new Color(120, 90, 70), 1));
        painel.add(campo);

        return campo;
    }

    private JComboBox<String> criarComboBox(JPanel painel, String titulo, String[] opcoes, int x, int y) {
        JLabel label = new JLabel(titulo);
        label.setBounds(x, y, 180, 25);
        label.setFont(new Font("Segoe UI", Font.BOLD, 16));
        label.setForeground(new Color(60, 45, 35));
        painel.add(label);

        JComboBox<String> combo = new JComboBox<>(opcoes);
        combo.setBounds(x + 120, y, 200, 35);
        combo.setFont(new Font("Segoe UI", Font.PLAIN, 16));
        combo.setBackground(new Color(232, 225, 217));
        painel.add(combo);

        return combo;
    }

    private JButton criarBotaoArredondado(String texto, int x, int y, JPanel painel) {
        JButton botao = new JButton(texto) {
            @Override
            protected void paintComponent(Graphics g) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                g2.setColor(getBackground());
                g2.fillRoundRect(0, 0, getWidth(), getHeight(), 30, 30);
                super.paintComponent(g2);
                g2.dispose();
            }
        };
        botao.setBounds(x, y, 250, 45);
        botao.setFont(new Font("Segoe UI", Font.BOLD, 16));
        botao.setBackground(new Color(120, 90, 70));
        botao.setForeground(Color.WHITE);
        botao.setFocusPainted(false);
        botao.setContentAreaFilled(false);
        botao.setOpaque(true);
        painel.add(botao);
        return botao;
    }

    private JPanel criarPainelTabela() {
        JPanel painelTabela = new JPanel(new BorderLayout());
        painelTabela.setBackground(new Color(232, 225, 217));

        modeloTabela = new DefaultTableModel(new String[]{
                "Turma", "Nome", "Matrícula", "Disciplina", "Semestre",
                "Data", "Nota 1", "Nota 2", "Nota 3", "Nota Extra", "Média", "Resultado"
        }, 0);

        tabelaDados = new JTable(modeloTabela);
        tabelaDados.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        tabelaDados.setRowHeight(25);
        JScrollPane scrollPane = new JScrollPane(tabelaDados);
        scrollPane.setBorder(new EmptyBorder(10, 10, 10, 10));

        painelTabela.add(scrollPane, BorderLayout.CENTER);
        return painelTabela;
    }

    private void calcularResultado() {
        try {
            double soma = 0;
            int contador = 0;

            if (!campoNota1.getText().isEmpty()) {
                soma += Double.parseDouble(campoNota1.getText());
                contador++;
            }
            if (!campoNota2.getText().isEmpty()) {
                soma += Double.parseDouble(campoNota2.getText());
                contador++;
            }
            if (!campoNota3.getText().isEmpty()) {
                soma += Double.parseDouble(campoNota3.getText());
                contador++;
            }
            if (!campoNotaExtra.getText().isEmpty()) {
                soma += Double.parseDouble(campoNotaExtra.getText());
                contador++;
            }

            if (contador == 0) throw new NumberFormatException();

            double media = soma / contador;
            String resultado = media >= 7 ? "APROVADO" : "REPROVADO";

            labelMedia.setText("MÉDIA: " + String.format("%.2f", media));
            labelResultado.setText("RESULTADO: " + resultado);
            labelResultado.setForeground(media >= 7 ? new Color(0, 150, 0) : Color.RED);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Insira ao menos uma nota válida.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void salvarDados() {
        try {
            String turma = turmaSelecionada != null ? turmaSelecionada : "N/A";
            String nome = (String) comboAluno.getSelectedItem();
            String matricula = "123";
            String disciplina = (String) comboDisciplina.getSelectedItem();
            String semestre = (String) comboSemestre.getSelectedItem();
            String data = campoData.getText();

            String nota1 = campoNota1.getText();
            String nota2 = campoNota2.getText();
            String nota3 = campoNota3.getText();
            String notaExtra = campoNotaExtra.getText();

            double soma = 0;
            int contador = 0;

            if (!nota1.isEmpty()) {
                soma += Double.parseDouble(nota1);
                contador++;
            }
            if (!nota2.isEmpty()) {
                soma += Double.parseDouble(nota2);
                contador++;
            }
            if (!nota3.isEmpty()) {
                soma += Double.parseDouble(nota3);
                contador++;
            }
            if (!notaExtra.isEmpty()) {
                soma += Double.parseDouble(notaExtra);
                contador++;
            }

            if (contador == 0) throw new NumberFormatException();

            double media = soma / contador;
            String resultado = media >= 7 ? "APROVADO" : "REPROVADO";

            modeloTabela.addRow(new Object[]{
                    turma, nome, matricula, disciplina, semestre, data,
                    nota1, nota2, nota3, notaExtra, String.format("%.2f", media), resultado
            });

            JOptionPane.showMessageDialog(this, "Dados salvos com sucesso!");

            campoNota1.setText("");
            campoNota2.setText("");
            campoNota3.setText("");
            campoNotaExtra.setText("");
            labelMedia.setText("MÉDIA: ");
            labelResultado.setText("RESULTADO: ");
            labelResultado.setForeground(new Color(60, 45, 35));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Preencha ao menos uma nota corretamente.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new SistemaNotasSwing().setVisible(true));
    }
}
